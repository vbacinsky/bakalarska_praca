;;;;; Slovania obchodnikmi ;;;


;pridat pomocny predikat, pohol sa, je na tahu, nie je vo vazeni

;;;;;;;;;;
;; role ;;

(role red)
(role blue)
(role random)

;;;;;;;;;;
;; fakty ;;

;hrady
(castle 1)
(castle 3)
(castle 7)
(castle 9)

;cesty
(path 2)
(path 4)
(path 5)
(path 6)
(path 8)

;negativne zetony
(negativeChip bazina)
(negativeChip rozbitaCesta)
(negativeChip zbojnici)

;hrany medzi polickami ciest a hradov
(edge 1 2)
(edge 2 1)
(edge 2 5)
(edge 5 2)
(edge 5 6)
(edge 6 5)
(edge 6 7)
(edge 7 6)
(edge 5 8)
(edge 8 5)
(edge 8 9)
(edge 9 8)
(edge 4 5)
(edge 5 4)
(edge 3 4)
(edge 4 3)


; ID FROM TO
(mission 1 1 3)
(mission 2 3 7)
(mission 3 1 9)
(mission 4 7 1)
(mission 5 7 3)
(mission 6 7 9)
(mission 7 3 1)
(mission 8 3 7)
(mission 9 3 9)
(mission 10 9 7)
(mission 11 9 1)
(mission 12 9 3)


;tu môžeme nastavit hracovi ake misie ma robit

(next_mission 1 2)
(next_mission 2 4)
(next_mission 4 8)
(next_mission 3 6)
(next_mission 6 7)
(next_mission 7 9)
(next_mission 9 12)
(next_mission 12 11)
(next_mission 11 5)
(next_mission 10 2)
(next_mission 5 6)
(next_mission 8 9)



;;;;;;;;;;;;;;;;;
;; úvodny stav ;;

;pozitiveChips: hrac sprievodca ochranka noveKoleso
; stav: meno poziciaFigurky peniaze idMisie aktBody pocetBazin pocetYbojnikov pocetRozbitychCiest vyzdviholTovar uzSaPohol
;negativeChips bazina zbojnici rozbitaCesta

(init (generateGame true))
(init (pozitiveChips blue 0 0 0))
(init (pozitiveChips red 0 0 0))
(init (negativeChips blue 0 0 0))
(init (negativeChips red 0 0 0))
(init (rollRess 0))


;;;;;;;;;;;;;;;;;;;;;;;
;vylepsenie o random;;;
;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal random (generateMissions ?idBlueM ?idRedM))                  ;vsetky mozne kombinacie misii, z ktorych random nasledne vyberie nahodne
    (true (generateGame true))
    (mission ?idBlueM ?from ?to)
    (mission ?idRedM ?from2 ?to2)
    (distinct ?idBlueM ?idRedM)) 

(<= (next (playerStat blue ?from 10 ?idBlueM 0 true))                   ;inicializovanie pre hraca blue plus pridanie nahodnej misie pomocou random
    (does random (generateMissions ?idBlueM ?idRedM))
	(mission ?idBlueM ?from ?to))
	
(<= (next (playerStat red ?from 10 ?idRedM 0 true))                     ;inicializovanie pre hraca red plus pridanie nahodnej misie pomocou random
    (does random (generateMissions ?idBlueM ?idRedM))
	(mission ?idRedM ?from ?to))

(<= (next (control random blue))                                        ;zacina hrac, ktory ma vyssie id Misie, ktore bolo vygenerovane nahodne
    (does random (generateMissions ?idBlueM ?idRedM))
    (greaterThen ?idBlueM ?idRedM))
		
(<= (next (control random red))
    (does random (generateMissions ?idBlueM ?idRedM))                   ;zacina hrac, ktory ma vyssie id Misie, ktore bolo vygenerovane nahodne
    (greaterThen ?idRedM ?idBlueM))

(<= (next (moved ?player))                                              ;premenna ci sa hrac uz pohol figurkou, aby sme vedeli kedy hrac moze zahrat aj ine tahy ako len move
    (does ?player (move ?from ?to)))
	
(<= (next (moved ?player))
    (true (control ?player random))
    (not (does ?player endTurn)))

(<= (next (moved ?player))
    (does random (generateNewMission ?idM))
	(true (control random ?player)))
	
;;;;;;;;;;;;;;;;;;
;; legalne tahy ;;

(<= (legal ?anyPlayer noop)		       			;hraci mimo kola nerobia nic
	(true (control ?player ?other))
	(role ?anyPlayer)
	(distinct ?player ?anyPlayer))

(<= (legal ?anyPlayer noop)
    (true (generateGame true))
    (role ?anyPlayer)	;hraci nerobia nic pri generovani hry
	(distinct ?anyPlayer random))

;(<= (legal random noop)
;	(true (control ?player random))
;   (role ?player))

	
(<= (legal random (roll 1))
    (not (true (moved ?next)))					;ak sa este hrac nepohol, tak mozeme hadzat kockou pomocou random hraca, mozne hody, zatial 1 a 2
    (true (control random ?next))
    (not (true (generateGame true))))

(<= (legal random (roll 2))	
    (not (true (moved ?next)))		;
    (true (control random ?next))
    (not (true (generateGame true))))

(<= (legal ?player (move ?act ?next))                           ;pohyb figurky hraca o hodene cislo
    (true (rollRess ?num))
    (or (vrcholy_vo_vzdialenosti ?act ?next ?num) (hrady_vo_vzdialenosti ?act ?next ?num))
    (true (playerStat ?player ?act ?m ?idM ?p ?collected)) 
	(true (control ?player random)))
    

(<= (legal ?player endTurn)                                    ;ukoncenie tahu
    (true (moved ?player))
	(true (control ?player random)))


(<= (legal ?player buyN_Bazina)                                             ;hrac moze nakupit bazinu, zbojnikov alebo rc, ak je na tahu, pohol sa, nie je vo vazeni a ma viac ako 0 penazi
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (true (moved ?player))
        (true (control ?player random))
        (not (true (inJail ?player)))
        (greaterThen ?m 0))

(<= (legal ?player buyN_Zbojnici)
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))              
        (true (moved ?player))
        (true (control ?player random))
        (not (true (inJail ?player)))
        (greaterThen ?m 0))

(<= (legal ?player buyN_RozbitaCesta)                                        
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (true (moved ?player))
        (true (control ?player random))
        (not (true (inJail ?player)))
        (greaterThen ?m 0))

(<= (legal ?player buyP_Ochranka)                                           ;hrac moze nakupit ochranku, sprievodcu alebo noveKoleso, ak je na tahu, pohol sa, nie je vo vazeni a ma viac ako 1 penazi
    (true (control ?player random))
    (not (true (inJail ?player)))
    (true (playerStat ?player ?act ?m ?idM ?p ?collected))
    (true (moved ?player))
    (greaterThen ?m 1))

(<= (legal ?player buyP_Sprievodca)
    (true (control ?player random))
    (not (true (inJail ?player)))
    (true (playerStat ?player ?act ?m ?idM ?p ?collected))
    (true (moved ?player))
    (greaterThen ?m 1))

(<= (legal ?player buyP_NoveKoleso)
    (true (control ?player random))
    (not (true (inJail ?player)))
    (true (playerStat ?player ?act ?m ?idM ?p ?collected))
    (true (moved ?player))
    (greaterThen ?m 1))


(<= (legal ?player (dropBazina ?policko))                    ;hrac moze vlozit na policko svoj prislusny negativny zeton ak ho ma kupeny, ak policko je cesta, ak je na tahu, pohol sa a ak na policku nie je iny neg. zeton
        (path ?policko)
        (role ?anyPlayer)
		(true (negativeChips ?player ?b ?z ?rc))
        (true (moved ?player))
        (true (control ?player random))
        (not (isField ?policko))
        (not (true (inJail ?player)))
        (greaterThen ?b 0))

(<= (legal ?player (dropZbojnici ?policko))
        (path ?policko)
        (role ?anyPlayer)
		(true (negativeChips ?player ?b ?z ?rc))
        (true (moved ?player))
        (true (control ?player random))
        (not (isField ?policko))
        (not (true (inJail ?player)))
        (greaterThen ?z 0))

(<= (legal ?player (dropRozbitaCesta ?policko))
        (path ?policko)
        (role ?anyPlayer)
		(true (negativeChips ?player ?b ?z ?rc))
        (true (moved ?player))
        (true (control ?player random))
        (not (isField ?policko))
        (not (true (inJail ?player)))
        (greaterThen ?rc 0))


(<= (isField ?policko)
    (true (field ?policko ?player ?chip)))


;;;;;;;;;;;;;;;;
;; next ;;
;;;;;;;;;;;;;;;;

	
(<= (next (rollRess ?num))	
	(does random (roll ?num)))



(<= (next (playerStat ?player ?actP ?m ?idM ?p ?collected))                     ;ak hrac nie je na tahu, figurka ostava na rovnakom poli hracej plochy
        (does ?player noop)
        (true (playerStat ?player ?actP ?m ?idM ?p ?collected)))

(<= (next (playerStat ?player ?newP ?m ?idM ?p true))                       ;ak hrac je na tahu a nedokoncil misiu tak sa posuva figurkou
         (does ?player (move ?actP ?newP))
         (role ?opponent)
         (not (isField ?newP))
         (mission ?idM ?from ?to)
         (distinct ?to ?newP)
         (true (playerStat ?player ?actP ?m ?idM ?p true))) 

(<= (next (playerStat ?player ?newP ?m ?idM ?p false))                       ;ak hrac je na tahu a nedokoncil misiu tak sa posuva figurkou
         (does ?player (move ?actP ?newP))
         (role ?opponent)
         (not (isField ?newP))
         (mission ?idM ?from ?to)
         (distinct ?from ?newP)
         (true (playerStat ?player ?actP ?m ?idM ?p false))) 
                       

(<= (next (playerStat ?player ?newP ?m ?actMission ?newPoints false))        ;ak dokoncil misiu, tak dostane novu, pricom tovar nie je vyzdvihnuty a dostane pocet bodov za misiu
        (does ?player (move ?act ?newP))
        (role ?opponent)
        (not (isField ?newP))
        (true (playerStat ?player ?act ?m ?actMission ?actPoints true))
        ;(next_mission ?actMission ?newMission)
        (mission ?actMission ?from ?newP)
        (mission ?newMission ?from2 ?to)
        (distinct ?from2 ?newP)
        (pluss ?actPoints 5 ?newPoints))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; pokus pridania generovania dalsej misie nahodne
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(<= (legal random (generateNewMission ?idM))
    (true (finished_missionn ?player))
	(mission ?idM ?from2 ?to2))


(<= (next (finished_missionn ?player))
    (does ?player (move ?act ?newP))
    (true (playerStat ?player ?act ?m ?actMission ?actPoints ?collected))
	(mission ?actMission ?from ?newP))
	
(<= (finished_mission ?player)
    (does ?player (move ?act ?newP))
    (true (playerStat ?player ?xxx ?m ?actMission ?actPoints ?collected))
	(mission ?actMission ?from ?newP))	
	
(<= (next (control random ?player))
    (finished_mission ?player))
	
(<= (next (control ?player random))
    (true (control random ?player))
    (does random (generateNewMission ?idM)))	
	

	
(<= (next (playerStat ?player ?newP ?m ?newMission ?newPoints true))        ;ak dokoncil misiu, tak dostane novu. Ak nova misia začína tam kde končí ta predošla tak tovar je vyzdvihnuty a dostane pocet bodov za misiu
        (does ?player (move ?act ?newP))
        (negativeChip ?chip)
        (role ?opponent)
        (not (isField ?newP))
        (true (playerStat ?player ?act ?m ?actMission ?actPoints true))
        (next_mission ?actMission ?newMission)
        (mission ?actMission ?from ?newP)
        (mission ?newMission ?newP ?to)
        (pluss ?actPoints 6 ?newPoints))

(<= (next (playerStat ?player ?newP ?m ?actMission ?newPoints true))                            ;ak je na policku kde zacina misia tak vyzdivhol tovar
        (true (playerStat ?player ?act ?m ?actMission ?p false))
		(succ ?p ?newPoints)
        (does ?player (move ?act ?newP))
        (mission ?actMission ?newP ?to))
                                                                                        
        

(<= (next (playerStat ?player ?act ?newM ?idM ?p ?collected))                        ;ak kupil bazinu
        (true (playerStat ?player ?act ?oldM ?idM ?p ?collected))
        (does ?player buyN_Bazina)
        (succ ?newM ?oldM))
      

(<= (next (playerStat ?player ?act ?newM ?idM ?p ?collected))                        ;ak kupil zbojnikov
        (true (playerStat ?player ?act ?oldM ?idM ?p ?collected))
        (does ?player buyN_Zbojnici)
        (succ ?newM ?oldM))
        

(<= (next (playerStat ?player ?act ?newM ?idM ?p ?collected))                        ;ak kupil rozbitu cestu
        (true (playerStat ?player ?act ?oldM ?idM ?p ?collected))
        (does ?player buyN_RozbitaCesta)
        (succ ?newM ?oldM))

(<= (next (playerStat ?player ?act ?newM ?idM ?p ?collected))                        ;ak kupil Sprievodcu alebo Ochranku alebo NoveKoleso, minus 2 peniaze
        (true (playerStat ?player ?act ?oldM ?idM ?p ?collected))
        (or (does ?player buyP_Sprievodca) (does ?player buyP_Ochranka) (does ?player buyP_NoveKoleso))
        (minuss ?oldM 2 ?newM))

(<= (next (playerStat ?player ?act ?m ?idM ?p ?collected))                                   ;ak ukoncil tah
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (does ?player endTurn))
                                                                         

                                                                                                             ;ak dropol bazinu
(<= (next (playerStat ?player ?act ?m ?idM ?p ?collected)) 
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (does ?player (dropBazina ?policko)))

(<= (next (playerStat ?player ?act ?m ?idM ?p ?collected))             ;ak dropol zbojnikov
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (does ?player (dropZbojnici ?policko)))

(<= (next (playerStat ?player ?act ?m ?idM ?p ?collected))             ;ak dropol rozbitu cestu
        (true (playerStat ?player ?act ?m ?idM ?p ?collected))
        (does ?player (dropRozbitaCesta ?policko)))


(<= (next (playerStat ?player ?newP ?m ?idM ?p ?collected)) 		;ak stupil na policko, na kt. je jeho neg. zeton
	(does ?player (move ?actP ?newP))
	(true (field ?newP ?player ?chip))
	(true (playerStat ?player ?actP ?m ?idM ?p ?collected)))

											

(<= (next (playerStat ?player ?actP ?m ?idM ?p ?collected)) 		;ak stupil na policko, na kt. je cudzia bazina a nema sprievodcu
	(does ?player (move ?actP ?newP))
	(true (field ?newP ?opponent bazina))
        (distinct ?opponent ?player)
	(true (playerStat ?player ?actP ?m ?idM ?p ?collected))
        (true (pozitiveChips ?player 0 ?o ?nk)))
        

(<= (next (playerStat ?player ?newP ?m ?idM ?p false))   
       (does ?player (move ?actP ?newP))
       (true (field ?newP ?opponent zbojnici))
       (distinct ?opponent ?player)                                                ;ak stupil na policko, na kt. su cudzi zbojnici a nema ochranku
       (true (playerStat ?player ?actP ?m ?idM ?p ?collected))
       (true (pozitiveChips ?player ?s 0 ?nk)))



(<= (next (playerStat ?player ?newP ?m ?idM ?p ?collected)) 
        (true (playerStat ?player ?actP ?m ?idM ?p ?collected))		;ak stupil na policko, na kt. je cudzia rozbita cesta a nema noveKoleso
	(does ?player (move ?actP ?newP))
	(true (field ?newP ?opponent rozbitaCesta))
        (distinct ?player ?opponent)
        (true (pozitiveChips ?player ?s ?o 0)))


(<= (next (playerStat ?player ?newP ?m ?idM ?p ?collected))              ;ak stupil na cudzi neg. zeton a mal k nemu pozitivny, tak sa len posunie
        (true (playerStat ?player ?actP ?m ?idM ?p ?collected))
	(does ?player (move ?actP ?newP))
        (or (stepOnBazinaAndHaveSprievodca ?player) (stepOnZbojniciAndHaveOchranka ?player) (stepOnRozbitaCestaAndHaveNoveKoleso ?player)))





(<= (next (field ?policko ?player bazina))
        (does ?player (dropBazina ?policko))
        (true (control ?player random)))

(<= (next (field ?policko ?player zbojnici))
        (does ?player(dropZbojnici ?policko))
        (true (control ?player random)))

(<= (next (field ?policko ?player rozbitaCesta))
        (does ?player (dropRozbitaCesta ?policko))
        (true (control ?player random)))


(<= (next (field ?f ?player ?chip))                     ;zeton ostava na policko ak nema zmiznut
    (true (field ?f ?player ?chip))
    (not (removeField ?f ?player ?chip)))
    
(<= (removeField ?newP ?playerPut ?chip)                ;pomocne predikat, kt hovori o tom ze na policko ma chip zmiznut
    (true (field ?newP ?playerPut ?chip))
    (does ?otherPlayer (move ?old ?newP))
    (distinct ?otherPlayer ?playerPut))


(<= (next (inJail ?player))                              ;ak stupil na rozbitu cestu tak je vo vazeni
    (true (field ?newP ?opponent rozbitaCesta))
    (does ?player (move ?oldP ?newP))
    (distinct ?player ?opponent))



(<= (next (inJail ?player))
    (true (inJail ?player))
    (not (removeJail ?player)))


(<= (removeJail ?player)
    (does ?opponent endTurn)
    (role ?player)
    (distinct ?player ?opponent))

(<= (removeJail ?player)
    (true (inJail ?player))
    (true (inJail ?opponent))
    (distinct ?player ?opponent))


(<= (next (control ?next random))
	(does random (roll ?num))		
	(true (control random ?next)))		


(<= (next (control ?player random))
      (true (control ?player random))
	  (not (finished_mission ?player))
      (not (does ?player endTurn)))
 

(<= (next (control random ?opponent)) 
      (role ?opponent) 
      (role ?player)                           ;ak je hrac na tahu a super nie je vo vazeni tak na tah ide super
      (not (true (inJail ?opponent)))
      (distinct random ?opponent)
      (distinct random ?player)
      (distinct ?player ?opponent)
      (does ?player endTurn)         
      (true (control ?player random)))
      
(<= (next (control random ?player)) 
      (role ?opponent)
      (role ?player)
      (not (true (inJail ?player)))                 ;ak je hrac na tahu a nie je vo vazeni a super je vo vazeni tak ide este raz
      (true (inJail ?opponent))
      (distinct ?player ?opponent)
      (does ?player endTurn)         
      (true (control ?player random)))


                                                      
(<= (next (control random ?opponent))                           ;ak su obaja vo vazeni tak ide druhy hrac
      (true (inJail ?opponent))
      (true (inJail ?player))
      (distinct ?player ?opponent)
      (does ?player endTurn)         
      (true (control ?player random)))                                             



;;;;;;;;;;;;;;;;;;;;;;;;
;negativeChips;
;;;;;;;;;;;;;;;;;;;;;;;;;;




(<= (next (negativeChips ?player ?newB ?z ?rc))				;ak kupil bazinu
    (true (negativeChips ?player ?oldB ?z ?rc))
    (does ?player buyN_Bazina)
	(succ ?oldB ?newB))
	
	
(<= (next (negativeChips ?player ?b ?newZ ?rc))             ;ak kupil zbojnikov
    (true (negativeChips ?player ?b ?oldZ ?rc))
	(does ?player buyN_Zbojnici)
	(succ ?oldZ ?newZ))


(<= (next (negativeChips ?player ?b ?z ?newRC))             ;ak kupil rozbituCestu
    (true (negativeChips ?player ?b ?z ?oldRC))
	(does ?player buyN_RozbitaCesta)
	(succ ?oldRC ?newRC))


(<= (next (negativeChips ?player ?newB ?z ?rc))             ;ak dropol bazinu
    (true (negativeChips ?player ?oldB ?z ?rc))
    (does ?player (dropBazina ?policko))
	(succ ?newB ?oldB))
	

(<= (next (negativeChips ?player ?b ?newZ ?rc))             ;ak dropol zbojnikov
    (true (negativeChips ?player ?b ?oldZ ?rc))
    (does ?player (dropZbojnici ?policko))
	(succ ?newZ ?oldZ))	

(<= (next (negativeChips ?player ?b ?z ?newRC))             ;ak dropol rozbituCestu
    (true (negativeChips ?player ?b ?z ?oldRC))
    (does ?player (dropRozbitaCesta ?policko))
	(succ ?newRC ?oldRC))


(<= (next (negativeChips ?player ?b ?z ?rc))
    (true (negativeChips ?player ?b ?z ?rc))
	(not (buyNegativeChip ?player))
    (not (droppedNegativeChip ?player)))


(<= (droppedNegativeChip ?player)
    (or (does ?player (dropBazina ?policko)) (does ?player (dropRozbitaCesta ?policko)) (does ?player (dropZbojnici ?policko))))

(<= (buyNegativeChip ?player)
    (or (does ?player buyN_Bazina) (does ?player buyN_Zbojnici) (does ?player buyN_RozbitaCesta)))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;; pozitiveChips ;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (next (pozitiveChips ?player ?newS ?o ?nk))              ;ak kupil sprevodcu
    (true (pozitiveChips ?player ?oldS ?o ?nk))
    (does ?player buyP_Sprievodca)
    (succ ?oldS ?newS))

(<= (next (pozitiveChips ?player ?s ?newO ?nk))              ;ak kupil ochranku
    (true (pozitiveChips ?player ?s ?oldO ?nk))
    (does ?player buyP_Ochranka)
    (succ ?oldO ?newO))

(<= (next (pozitiveChips ?player ?s ?o ?newNK))              ;ak kupil noveKoleso
    (true (pozitiveChips ?player ?s ?o ?oldNK))
    (does ?player buyP_NoveKoleso)
    (succ ?oldNK ?newNK))

(<= (next (pozitiveChips ?player ?sM1 ?o ?nk))               ;ak sprievodca splnil svoju funkciu
    (stepOnBazinaAndHaveSprievodca ?player)
    (true (pozitiveChips ?player ?actS ?o ?nk))
    (greaterThen ?actS 0)
    (succ ?sM1 ?actS))

(<= (next (pozitiveChips ?player ?s ?oM1 ?nk))               ;ak ochranka splnila svoju funkciu
    (stepOnZbojniciAndHaveOchranka ?player)
    (true (pozitiveChips ?player ?s ?actO ?nk))
    (greaterThen ?actO 0)
    (succ ?oM1 ?actO))

(<= (next (pozitiveChips ?player ?s ?o ?nkM1))               ;ak noveKoleso splnilo svoju funkciu
    (stepOnRozbitaCestaAndHaveNoveKoleso ?player)
    (true (pozitiveChips ?player ?s ?o ?actNK))
    (greaterThen ?actNK 0)
    (succ ?nkM1 ?actNK))

(<= (next (pozitiveChips ?player ?s ?o ?nk))
    (true (pozitiveChips ?player ?s ?o ?nk))
    (not (buyPositiveChip ?player))
    (not (stepOnBazinaAndHaveSprievodca ?player))                    ;pocet pozitivnych zetonov sa nezmeni ak nekupil pozitivny zeton a ak nevyuzil svoj pozitivny zeton
    (not (stepOnZbojniciAndHaveOchranka ?player))
    (not (stepOnRozbitaCestaAndHaveNoveKoleso ?player)))

(<= (buyPositiveChip ?player)
    (or (does ?player buyP_Sprievodca) (does ?player buyP_NoveKoleso) (does ?player buyP_Ochranka)))

(<= (stepOnBazinaAndHaveSprievodca ?player)
    (does ?player (move ?oldP ?newP))
    (true (field ?newP ?opponent bazina))
    (distinct ?player ?opponent)
    (true (pozitiveChips ?player ?s ?o ?nk))
    (greaterThen ?s 0))

(<= (stepOnZbojniciAndHaveOchranka ?player)
    (does ?player (move ?oldP ?newP))
    (true (field ?newP ?opponent zbojnici))
    (distinct ?player ?opponent)
    (true (pozitiveChips ?player ?s ?o ?nk))
    (greaterThen ?o 0))

(<= (stepOnRozbitaCestaAndHaveNoveKoleso ?player)
    (does ?player (move ?oldP ?newP))
    (true (field ?newP ?opponent rozbitaCesta))
    (distinct ?player ?opponent)
    (true (pozitiveChips ?player ?s ?o ?nk))
    (greaterThen ?nk 0))



;;;;;;;;;;;;;;;;;;;;;;;;
;; terminal and goals ;;
;;;;;;;;;;;;;;;;;;;;;;;;


(<= (goal ?player ?actPoints)
     (true (playerStat ?player ?actP ?m ?actMission ?actPoints ?collected)))
        
        
(goal random 0)
    
;;;;;;;;;;;;;;;;;;;;;;;;


(<= terminal
    (true (playerStat ?player ?actP ?m ?actMission ?actPoints ?collected))
    (greaterThen ?actPoints 9))    




;;;;;;;;;;;;;;;;;;;;;;;
;; operacie ;;
;;;;;;;;;;;;;;;;;;;;;;;

(<= (pluss ?res 0 ?res)
        (succ ?res ?x))

(<= (pluss ?x ?y ?res)
        (succ ?x ?x2)
        (succ ?y2 ?y)
        (pluss ?x2 ?y2 ?res))

(<= (minuss ?res 0 ?res); x - y = res
	(succ ?res ?x))	
(<= (minuss ?x ?y ?res)		;IMPORTATNT: same as above
	(succ ?xM1 ?x)
	(succ ?yM1 ?y)
	(minuss ?xM1 ?yM1 ?res))

(<= (greaterThen ?x ?y)	
    (succ ?y ?x))
(<= (greaterThen ?x ?z)
    (succ ?z ?y)
    (greaterThen ?x ?y))


(<= (equals ?x ?y)	
	(succ ?x ?z)
	(succ ?y ?z))


;;;;;;;;;;;;;;;;
;; cisla ;;
;;;;;;;;;;;;;;;;

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)
(succ 20 21)

;predikat finished mission
;este pridat premennu ci tovar vyzdvihol


(<= (hrady_vo_vzdialenosti ?a ?cas ?n)            ;vsetky hrady vo vzdialenosti "n", ale v skutocnosti su vo vzdialenosti mensej ako n a vacsej ako 0
         (castle ?cas)
         (greaterThen ?x 0)
         (greaterThen ?n ?x)
         (vrcholy_vo_vzdialenosti ?a ?cas ?x))


(<= (vrcholy_vo_vzdialenosti ?a ?b 1)
        (edge ?a ?b))


(<= (vrcholy_vo_vzdialenosti ?a ?b ?n)
        (greaterThen ?n 1)
        (edge ?a ?c)
        (succ ?x ?b)
        (succ ?nM1 ?n)
        (not (equals ?a ?b))
        (vrcholy_vo_vzdialenosti ?c ?b ?nM1))
        

